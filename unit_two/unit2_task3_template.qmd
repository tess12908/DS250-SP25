---
title: "Client Report - Longevity of Baseball Players"
subtitle: "Unit 2 Task 3"
author: "[STUDENT NAME]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd 
import numpy as np
import sqlite3
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```


```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
sqlite_file = 'lahmansbaseballdb.sqlite'
# this file must be in the same location as your .qmd or .py file
con = sqlite3.connect(sqlite_file)
```

## QUESTION 1

__Calculate the average career length for players who have played at least 10 games in their career. Use years as the unit of measure.__

_type your results and analysis here_

```{python}
# Include and execute your code here
df_appearances = pd.read_sql_query("SELECT playerID, yearID, G_all AS G FROM appearances", con)

grouped = df_appearances.groupby('playerID')

total_games = grouped['G'].sum()
career_years = grouped['yearID'].nunique()

df_career = pd.DataFrame({
    'playerID': total_games.index,
    'total_games': total_games.values,
    'career_length_years': career_years.values
})

df_career_filtered = df_career[df_career['total_games'] >= 10]

average_career_length = df_career_filtered['career_length_years'].mean()

print(f"Average career length for players with at least 10 games:{average_career_length:.2f}")


```


## QUESTION 2

1. Identify the top 10 players with the longest careers (based on the number of years they played). Include their:

    - playerID
    - first_name
    - last_name
    - career_length

_Describe your results and analysis here_

```{python}

query = """
SELECT 
    a.playerID,
    p.nameFirst AS first_name,
    p.nameLast AS last_name,
    COUNT(DISTINCT a.yearID) AS career_length
FROM 
    appearances a
JOIN 
    people p ON a.playerID = p.playerID
GROUP BY 
    a.playerID
ORDER BY 
    career_length DESC
LIMIT 10; 
"""

top10_players = pd.read_sql_query(query, con) 

print(top10_players)


```



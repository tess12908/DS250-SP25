---
title: "Client Report - BYU-Idaho Players and Comparing Teams"
subtitle: "Unit 2 Task 2"
author: "[STUDENT NAME]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd 
import numpy as np
import sqlite3
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```


```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
sqlite_file = 'lahmansbaseballdb.sqlite'
# this file must be in the same location as your .qmd or .py file
con = sqlite3.connect(sqlite_file)
```

## QUESTION 1

__Write an SQL query to create a new dataframe about baseball players who attended BYU-Idaho. The new table should contain five columns: playerID, schoolID, salary, and the yearID/teamID associated with each salary. Order the table by salary (highest to lowest) and print out the table in your report.__

_type your results and analysis here_

```{python}
# Include and execute your code here
pd.read_sql_query(
"""SELECT
    s.playerID,
    cp.schoolID,
    s.salary,
    s.yearID,
    s.teamID
FROM
    Salaries s
JOIN
    CollegePlaying cp ON s.playerID = cp.playerID
JOIN
    Schools sch ON cp.schoolID = sch.schoolID
WHERE
    sch.name_full = 'Brigham Young University-Idaho'
ORDER BY
    s.salary DESC;""", con
) 

```


## QUESTION 2

__Pick any two baseball teams and compare them using a metric of your choice (average salary, home runs, number of wins, etc). Be creative! Write an SQL query to get the data you need, then make a graph using Lets-Plot to visualize the comparison. What do you learn?__ 

_type your results and analysis here_

```{python}
# Include and execute your code here
#Query for home runs

query = """
SELECT 
    name AS team_name,
    yearID AS season,
    HR AS home_runs
FROM 
   teams
WHERE 
    teamID IN ('BOS', 'TEX')
ORDER BY 
    season, team_name;
"""

df = pd.read_sql(query, con) 

display(df)

plot = (
    ggplot(df, aes(x='season', y='home_runs', color='team_name')) +
    geom_line(size=1) +
    labs(
        title='Home Runs: WASHINGTON SENATORS VS TEXAS RANGERS ',
        x='Season',
        y='Home Runs',
        color='Team'
    ) +
    theme_minimal()
)

plot
```


